# Generated by Django 4.2.24 on 2025-09-19 13:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('submissions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='JudgeConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[('python', 'Python'), ('cpp', 'C++'), ('java', 'Java'), ('javascript', 'JavaScript')], max_length=20, unique=True, verbose_name='编程语言')),
                ('compile_command', models.CharField(max_length=200, verbose_name='编译命令')),
                ('run_command', models.CharField(max_length=200, verbose_name='运行命令')),
                ('file_extension', models.CharField(max_length=10, verbose_name='文件扩展名')),
                ('time_limit_multiplier', models.FloatField(default=1.0, verbose_name='时间限制倍数')),
                ('memory_limit_multiplier', models.FloatField(default=1.0, verbose_name='内存限制倍数')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='是否启用')),
            ],
            options={
                'verbose_name': '评测配置',
                'verbose_name_plural': '评测配置',
                'ordering': ['language'],
            },
        ),
        migrations.CreateModel(
            name='JudgeResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', '等待中'), ('judging', '评测中'), ('accepted', '通过'), ('wrong_answer', '答案错误'), ('time_limit_exceeded', '超时'), ('memory_limit_exceeded', '内存超限'), ('runtime_error', '运行时错误'), ('compile_error', '编译错误'), ('system_error', '系统错误')], default='pending', max_length=25, verbose_name='评测状态')),
                ('score', models.PositiveIntegerField(default=0, verbose_name='得分')),
                ('time_used', models.PositiveIntegerField(blank=True, null=True, verbose_name='运行时间(ms)')),
                ('memory_used', models.PositiveIntegerField(blank=True, null=True, verbose_name='内存使用(KB)')),
                ('error_message', models.TextField(blank=True, verbose_name='错误信息')),
                ('test_results', models.JSONField(blank=True, default=list, verbose_name='测试结果详情')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('submission', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='submissions.submission', verbose_name='提交记录')),
            ],
            options={
                'verbose_name': '评测结果',
                'verbose_name_plural': '评测结果',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='JudgeQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.PositiveIntegerField(default=0, verbose_name='优先级')),
                ('status', models.CharField(choices=[('pending', '等待中'), ('processing', '处理中'), ('completed', '已完成'), ('failed', '失败')], default='pending', max_length=20, verbose_name='队列状态')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='入队时间')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='开始时间')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='完成时间')),
                ('submission', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='submissions.submission', verbose_name='提交记录')),
            ],
            options={
                'verbose_name': '评测队列',
                'verbose_name_plural': '评测队列',
                'ordering': ['-priority', 'created_at'],
            },
        ),
    ]
