# Generated by Django 4.2.24 on 2025-09-26 09:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('problems', '0002_globaltemplate_problemtemplate_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='分类名称')),
                ('description', models.TextField(blank=True, verbose_name='分类描述')),
                ('color', models.CharField(default='#007bff', max_length=7, verbose_name='颜色')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '题目分类',
                'verbose_name_plural': '题目分类',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='标签名称')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '题目标签',
                'verbose_name_plural': '题目标签',
                'ordering': ['name'],
            },
        ),
        migrations.AlterModelOptions(
            name='globaltemplate',
            options={'ordering': ['language', 'name'], 'verbose_name': '全局模板', 'verbose_name_plural': '全局模板'},
        ),
        migrations.AlterModelOptions(
            name='problem',
            options={'ordering': ['-created_at'], 'verbose_name': '题目', 'verbose_name_plural': '题目'},
        ),
        migrations.AlterModelOptions(
            name='problemtemplate',
            options={'ordering': ['problem', 'language'], 'verbose_name': '题目模板', 'verbose_name_plural': '题目模板'},
        ),
        migrations.RemoveField(
            model_name='problem',
            name='creator',
        ),
        migrations.RemoveField(
            model_name='problem',
            name='is_active',
        ),
        migrations.RemoveField(
            model_name='problem',
            name='test_input',
        ),
        migrations.RemoveField(
            model_name='problem',
            name='test_output',
        ),
        migrations.AddField(
            model_name='problem',
            name='accepted_submissions',
            field=models.PositiveIntegerField(default=0, verbose_name='通过提交数'),
        ),
        migrations.AddField(
            model_name='problem',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
        migrations.AddField(
            model_name='problem',
            name='is_public',
            field=models.BooleanField(default=True, verbose_name='是否公开'),
        ),
        migrations.AddField(
            model_name='problem',
            name='total_submissions',
            field=models.PositiveIntegerField(default=0, verbose_name='总提交数'),
        ),
        migrations.AlterField(
            model_name='globaltemplate',
            name='creator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AlterField(
            model_name='globaltemplate',
            name='language',
            field=models.CharField(choices=[('python', 'Python'), ('cpp', 'C++'), ('c', 'C'), ('java', 'Java'), ('javascript', 'JavaScript'), ('go', 'Go'), ('rust', 'Rust')], max_length=20, verbose_name='编程语言'),
        ),
        migrations.AlterField(
            model_name='problem',
            name='input_format',
            field=models.TextField(verbose_name='输入格式'),
        ),
        migrations.AlterField(
            model_name='problem',
            name='memory_limit',
            field=models.PositiveIntegerField(default=256, verbose_name='内存限制(MB)'),
        ),
        migrations.AlterField(
            model_name='problem',
            name='output_format',
            field=models.TextField(verbose_name='输出格式'),
        ),
        migrations.AlterField(
            model_name='problem',
            name='sample_input',
            field=models.TextField(verbose_name='样例输入'),
        ),
        migrations.AlterField(
            model_name='problem',
            name='sample_output',
            field=models.TextField(verbose_name='样例输出'),
        ),
        migrations.RemoveField(
            model_name='problem',
            name='tags',
        ),
        migrations.AlterField(
            model_name='problem',
            name='time_limit',
            field=models.PositiveIntegerField(default=1000, verbose_name='时间限制(ms)'),
        ),
        migrations.AlterField(
            model_name='problemtemplate',
            name='language',
            field=models.CharField(choices=[('python', 'Python'), ('cpp', 'C++'), ('c', 'C'), ('java', 'Java'), ('javascript', 'JavaScript'), ('go', 'Go'), ('rust', 'Rust')], max_length=20, verbose_name='编程语言'),
        ),
        migrations.AlterField(
            model_name='problemtemplate',
            name='problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='problems.problem', verbose_name='题目'),
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_data', models.TextField(verbose_name='输入数据')),
                ('expected_output', models.TextField(verbose_name='期望输出')),
                ('is_sample', models.BooleanField(default=False, verbose_name='是否为样例')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='顺序')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_cases', to='problems.problem', verbose_name='题目')),
            ],
            options={
                'verbose_name': '测试用例',
                'verbose_name_plural': '测试用例',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='problem',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='problems.category', verbose_name='分类'),
        ),
        migrations.AddField(
            model_name='problem',
            name='tags',
            field=models.ManyToManyField(blank=True, to='problems.tag', verbose_name='标签'),
        ),
    ]
