# Generated by Django 4.2.24 on 2025-09-26 03:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('problems', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GlobalTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='模板名称')),
                ('language', models.CharField(choices=[('python', 'Python'), ('cpp', 'C++'), ('c', 'C'), ('java', 'Java'), ('javascript', 'JavaScript')], max_length=20, verbose_name='编程语言')),
                ('template_code', models.TextField(verbose_name='模板代码')),
                ('description', models.TextField(blank=True, verbose_name='模板描述')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_templates', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
            ],
            options={
                'verbose_name': '全局模板',
                'verbose_name_plural': '全局模板管理',
                'ordering': ['language', 'name'],
                'unique_together': {('name', 'language')},
            },
        ),
        migrations.CreateModel(
            name='ProblemTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[('python', 'Python'), ('cpp', 'C++'), ('c', 'C'), ('java', 'Java'), ('javascript', 'JavaScript')], max_length=20, verbose_name='编程语言')),
                ('template_code', models.TextField(verbose_name='模板代码')),
                ('is_default', models.BooleanField(default=False, verbose_name='是否为默认模板')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '题目模板',
                'verbose_name_plural': '题目模板管理',
                'ordering': ['language'],
            },
        ),
        migrations.RemoveField(
            model_name='testcase',
            name='problem',
        ),
        migrations.AlterModelOptions(
            name='problem',
            options={'ordering': ['-created_at'], 'verbose_name': '题目', 'verbose_name_plural': '题目管理'},
        ),
        migrations.RemoveField(
            model_name='problem',
            name='accepted_submissions',
        ),
        migrations.RemoveField(
            model_name='problem',
            name='author',
        ),
        migrations.RemoveField(
            model_name='problem',
            name='category',
        ),
        migrations.RemoveField(
            model_name='problem',
            name='is_public',
        ),
        migrations.RemoveField(
            model_name='problem',
            name='total_submissions',
        ),
        migrations.AddField(
            model_name='problem',
            name='creator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_problems', to=settings.AUTH_USER_MODEL, verbose_name='创建者'),
        ),
        migrations.AddField(
            model_name='problem',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='是否激活'),
        ),
        migrations.AddField(
            model_name='problem',
            name='test_input',
            field=models.TextField(blank=True, verbose_name='测试输入'),
        ),
        migrations.AddField(
            model_name='problem',
            name='test_output',
            field=models.TextField(blank=True, verbose_name='测试输出'),
        ),
        migrations.AlterField(
            model_name='problem',
            name='input_format',
            field=models.TextField(blank=True, verbose_name='输入格式'),
        ),
        migrations.AlterField(
            model_name='problem',
            name='memory_limit',
            field=models.IntegerField(default=131072, verbose_name='内存限制(KB)'),
        ),
        migrations.AlterField(
            model_name='problem',
            name='output_format',
            field=models.TextField(blank=True, verbose_name='输出格式'),
        ),
        migrations.AlterField(
            model_name='problem',
            name='sample_input',
            field=models.TextField(blank=True, verbose_name='样例输入'),
        ),
        migrations.AlterField(
            model_name='problem',
            name='sample_output',
            field=models.TextField(blank=True, verbose_name='样例输出'),
        ),
        migrations.RemoveField(
            model_name='problem',
            name='tags',
        ),
        migrations.AlterField(
            model_name='problem',
            name='time_limit',
            field=models.IntegerField(default=1000, verbose_name='时间限制(ms)'),
        ),
        migrations.DeleteModel(
            name='Category',
        ),
        migrations.DeleteModel(
            name='Tag',
        ),
        migrations.DeleteModel(
            name='TestCase',
        ),
        migrations.AddField(
            model_name='problemtemplate',
            name='problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='problems.problem', verbose_name='关联题目'),
        ),
        migrations.AddField(
            model_name='problem',
            name='tags',
            field=models.CharField(blank=True, help_text='用逗号分隔多个标签', max_length=200, verbose_name='标签'),
        ),
        migrations.AlterUniqueTogether(
            name='problemtemplate',
            unique_together={('problem', 'language')},
        ),
    ]
